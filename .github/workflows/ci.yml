name: "Contentstack CI"

on:
  push:
    branches: [ master, next ]
  pull_request:
    branches: [ master, next ]

jobs:
  macOS:
    name: Test macOS
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer
    steps:
    - uses: actions/checkout@v1
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-
    - name: Dependencies
      run: carthage bootstrap --no-use-binaries --platform macOS
    - name: Dependency libxml2
      run: brew install libxml2 && brew link --force libxml2
    - name: macOS
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace "Contentstack.xcworkspace" -scheme "Contentstack macOS" SWIFT_ACTIVE_COMPILATION_CONDITIONS="NO_FATAL_TEST" -destination "platform=macOS" test | xcpretty
  iOS:
    name: Test iOS
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer
    strategy:
      matrix:
        destination: ["OS=16.2,name=iPhone 14 Pro"]
    steps:
    - uses: actions/checkout@v1
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-
    - name: Dependencies
      run: carthage bootstrap --no-use-binaries --platform iOS  --use-xcframeworks
    - name: iOS - ${{ matrix.destination }}
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace "Contentstack.xcworkspace" -scheme "Contentstack iOS" SWIFT_ACTIVE_COMPILATION_CONDITIONS="NO_FATAL_TEST" -destination "${{ matrix.destination }}" test | xcpretty

  tvOS:
    name: Test tvOS
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer
    strategy:
      matrix:
        destination: ["OS=16.1,name=Apple TV 4K (2nd generation)"]
    steps:
    - uses: actions/checkout@v1
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-
    - name: Dependencies
      run: carthage bootstrap --no-use-binaries --platform tvOS  --use-xcframeworks
    - name: tvOS - ${{ matrix.destination }}
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace "Contentstack.xcworkspace" -scheme "Contentstack tvOS" SWIFT_ACTIVE_COMPILATION_CONDITIONS="NO_FATAL_TEST" -destination "${{ matrix.destination }}" test | xcpretty

  watchOS:
    name: Test watchOS
    runs-on: macos-latest
    env: 
      DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer
    strategy:
      matrix:
        destination: ["OS=9.1,name=Apple Watch Series 6 (44mm)"]
    steps:
    - uses: actions/checkout@v1
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
        restore-keys: |
          ${{ runner.os }}-carthage-
    - name: watchOS - ${{ matrix.destination }}
      run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -workspace "Contentstack.xcworkspace" -scheme "Contentstack watchOS" -destination "${{ matrix.destination }}" build | xcpretty
